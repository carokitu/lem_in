srcs/lm_bfs.c:		if (current_link->room->pass != data->pass)
srcs/lm_bfs.c:			current_link->room->pass = data->pass;
srcs/lm_bfs.c:		if (ft_strcmp(current_link->name, data->end->name) == 0)
srcs/lm_bfs.c:		if (current_link->room->pass != data->pass && current_link->flux != 1)
srcs/lm_bfs.c:			current_link->room->pass = data->pass;
srcs/lm_bfs.c:		if (ft_strcmp(current_link->name, data->end->name) == 0 && current_link->flux != 1)
srcs/lm_bfs.c:	current_path = data->last;
srcs/lm_bfs.c:	data->pass += 1;
srcs/lm_bfs.c:	if (data->start && data->end)
srcs/lm_bfs.c:		current_path->room = data->start;
srcs/lm_bfs.c:		data->start->pass = data->pass;
srcs/lm_bfs.c:			data->last = last;
srcs/lm_bfs.c:			//lm_print_path(data->last);
srcs/lm_bfs.c:				data->last = last;
srcs/lm_bfs.c:				//lm_print_path(data->last);
srcs/lm_free.c:		if (data->hashtable[i])
srcs/lm_free.c:				lm_free_rooms(data->hashtable[i]);
srcs/lm_getmaps.c:			if (data->hashtable[hash] != NULL)
srcs/lm_getmaps.c:				name = data->hashtable[hash];
srcs/lm_getmaps.c:	current_room = data->hashtable[hash];
srcs/lm_getmaps.c:	data->hashtable[hash] = new_room;
srcs/lm_getmaps.c:	if (data->start != NULL || !(new_room = (t_room *)ft_memalloc(sizeof(t_room))))
srcs/lm_getmaps.c:	current_room = data->hashtable[hash];
srcs/lm_getmaps.c:	data->hashtable[hash] = new_room;
srcs/lm_getmaps.c:	data->start = new_room;
srcs/lm_getmaps.c:	if (data->end != NULL || !(new_room = (t_room *)ft_memalloc(sizeof(t_room))))
srcs/lm_getmaps.c:	current_room = data->hashtable[hash];
srcs/lm_getmaps.c:	data->hashtable[hash] = new_room;
srcs/lm_getmaps.c:	data->end = new_room;
srcs/lm_getpipes.c:	current_room = data->hashtable[hash];
srcs/lm_print_room.c:		current = data->hashtable[i];
srcs/main.c:				data->ants = ft_atoi(*line);
srcs/main.c:	if (data->ants <= 0)
srcs/main.c:		if (data->start)
srcs/main.c:			free(data->start);
srcs/main.c:		if(data->end)
srcs/main.c:			free(data->end);
srcs/main.c:	link = data->start->links;
srcs/main.c:	data->nb_path = i;
srcs/main.c:	ft_printf("nb path = %d\n", data->nb_path);
srcs/main.c:	if (data->challenger)
srcs/main.c:		start = data->challenger->infos;
srcs/main.c:	while (current_room != data->end)
srcs/main.c:	current_room = data->start;
srcs/main.c:			if (data->challenger == NULL)
srcs/main.c:				data->challenger = current_start;
srcs/main.c:		lm_print_path(data->last);
srcs/main.c:		// data-.challenger = NULL
